import 'package:cloud_firestore/cloud_firestore.dart';

import '../../../domain/entities/courses/enroll_course.dart';

class EnrollCourseModel extends EnrollCourse {
  EnrollCourseModel(
      {required super.studentName,
      required super.studentDocumentId,
      required super.studentAge,
      required super.studentGender,
      required super.studentDob,
      required super.parentName,
      required super.parentUserId,
      required super.parentEmail,
      required super.status,
      required super.reason,
      required super.courseName,
      required super.courseId,
      required super.subCourseName,
      required super.subCourseId,
      required super.notes,
      required super.enrollDocId,
      required super.instructorId,
      required super.instructorName,
      required super.instructorEmail,
      required super.prefSlotId,
      required super.instructorPhone,
      required super.timestamp,
      required super.lastUpdated});

  EnrollCourseModel copyWith({
    String? studentName,
    String? studentDocumentId,
    String? studentAge,
    String? studentGender,
    String? studentDob,
    String? parentName,
    String? parentUserId,
    String? parentEmail,
    String? status,
    String? reason,
    String? courseName,
    String? courseId,
    String? subCourseName,
    String? subCourseId,
    String? notes,
    String? enrollDocId,
    String? instructorId,
    String? instructorName,
    String? instructorEmail,
    String? prefSlotId,
    String? instructorPhone,
    Timestamp? timestamp,
    Timestamp? lastUpdated,
  }) {
    return EnrollCourseModel(
      studentName: studentName ?? this.studentName,
      studentDocumentId: studentDocumentId ?? this.studentDocumentId,
      studentAge: studentAge ?? this.studentAge,
      studentGender: studentGender ?? this.studentGender,
      studentDob: studentDob ?? this.studentDob,
      parentName: parentName ?? this.parentName,
      parentUserId: parentUserId ?? this.parentUserId,
      parentEmail: parentEmail ?? this.parentEmail,
      status: status ?? this.status,
      reason: reason ?? this.reason,
      courseName: courseName ?? this.courseName,
      courseId: courseId ?? this.courseId,
      subCourseName: subCourseName ?? this.subCourseName,
      subCourseId: subCourseId ?? this.subCourseId,
      notes: notes ?? this.notes,
      enrollDocId: enrollDocId ?? this.enrollDocId,
      instructorId: instructorId ?? this.instructorId,
      instructorName: instructorName ?? this.instructorName,
      instructorEmail: instructorEmail ?? this.instructorEmail,
      prefSlotId: prefSlotId ?? this.prefSlotId,
      instructorPhone: instructorPhone ?? this.instructorPhone,
      timestamp: timestamp ?? this.timestamp,
      lastUpdated: lastUpdated ?? this.lastUpdated,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'studentName': studentName,
      'studentDocumentId': studentDocumentId,
      'studentAge': studentAge,
      'studentGender': studentGender,
      'studentDob': studentDob,
      'parentName': parentName,
      'parentUserId': parentUserId,
      'parentEmail': parentEmail,
      'status': status,
      'reason': reason,
      'courseName': courseName,
      'courseId': courseId,
      'subCourseName': subCourseName,
      'subCourseId': subCourseId,
      'notes': notes,
      'enrollDocId': enrollDocId,
      'instructorId': instructorId,
      'instructorName': instructorName,
      'instructorEmail': instructorEmail,
      'prefSlotId': prefSlotId,
      'instructorPhone': instructorPhone,
      'timestamp': timestamp,
      'lastUpdated': lastUpdated,
    };
  }

  factory EnrollCourseModel.fromMap(Map<String, dynamic> map) {
    return EnrollCourseModel(
      studentName: map['studentName'] as String,
      studentDocumentId: map['studentDocumentId'] as String,
      studentAge: map['studentAge'] as String,
      studentGender: map['studentGender'] as String,
      studentDob: map['studentDob'] as String,
      parentName: map['parentName'] as String,
      parentUserId: map['parentUserId'] as String,
      parentEmail: map['parentEmail'] as String,
      status: map['status'] as String,
      reason: map['reason'] as String,
      courseName: map['courseName'] as String,
      courseId: map['courseId'] as String,
      subCourseName: map['subCourseName'] as String,
      subCourseId: map['subCourseId'] as String,
      notes: map['notes'] as String,
      enrollDocId: map['enrollDocId'] as String,
      instructorId: map['instructorId'] as String,
      instructorName: map['instructorName'] as String,
      instructorEmail: map['instructorEmail'] as String,
      prefSlotId: map['prefSlotId'] as String,
      instructorPhone: map['instructorPhone'] as String,
      timestamp: map['timestamp'] as Timestamp,
      lastUpdated: map['lastUpdated'] as Timestamp,
    );
  }
}

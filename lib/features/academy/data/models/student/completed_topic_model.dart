import 'package:academy/features/academy/domain/entities/student/completed_topic.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class CompletedTopicModel extends CompletedTopic {
  CompletedTopicModel(
      {required super.enrollId,
      required super.topicId,
      required super.studentId,
      required super.userId,
      required super.instructorId,
      required super.courseId,
      required super.subCourseId,
      required super.courseName,
      required super.subCourseName,
      required super.instructorName,
      required super.rating,
      required super.topicName,
      required super.studentTimeDocId,
      required super.certificationId,
      required super.certificationName,
      required super.status,
      required super.startedDate,
      required super.startedTime,
      required super.completedDate,
      required super.completedTime,
      required super.feedback,
      required super.description,
      required super.index,
      required super.prefSlotId,
      required super.timestamp,
      required super.lastUpdated});

  CompletedTopicModel copyWith({
    String? enrollId,
    String? topicId,
    String? studentId,
    String? userId,
    String? instructorId,
    String? courseId,
    String? subCourseId,
    String? courseName,
    String? subCourseName,
    String? instructorName,
    String? rating,
    String? topicName,
    String? studentTimeDocId,
    String? certificationId,
    String? certificationName,
    bool? status,
    String? startedDate,
    String? startedTime,
    String? completedDate,
    String? completedTime,
    String? feedback,
    String? description,
    int? index,
    String? prefSlotId,
    Timestamp? timestamp,
    Timestamp? lastUpdated,
  }) {
    return CompletedTopicModel(
      enrollId: enrollId ?? this.enrollId,
      topicId: topicId ?? this.topicId,
      studentId: studentId ?? this.studentId,
      userId: userId ?? this.userId,
      instructorId: instructorId ?? this.instructorId,
      courseId: courseId ?? this.courseId,
      subCourseId: subCourseId ?? this.subCourseId,
      courseName: courseName ?? this.courseName,
      subCourseName: subCourseName ?? this.subCourseName,
      instructorName: instructorName ?? this.instructorName,
      rating: rating ?? this.rating,
      topicName: topicName ?? this.topicName,
      studentTimeDocId: studentTimeDocId ?? this.studentTimeDocId,
      certificationId: certificationId ?? this.certificationId,
      certificationName: certificationName ?? this.certificationName,
      status: status ?? this.status,
      startedDate: startedDate ?? this.startedDate,
      startedTime: startedTime ?? this.startedTime,
      completedDate: completedDate ?? this.completedDate,
      completedTime: completedTime ?? this.completedTime,
      feedback: feedback ?? this.feedback,
      description: description ?? this.description,
      index: index ?? this.index,
      prefSlotId: prefSlotId ?? this.prefSlotId,
      timestamp: timestamp ?? this.timestamp,
      lastUpdated: lastUpdated ?? this.lastUpdated,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'enrollId': enrollId,
      'topicId': topicId,
      'studentId': studentId,
      'userId': userId,
      'instructorId': instructorId,
      'courseId': courseId,
      'subCourseId': subCourseId,
      'courseName': courseName,
      'subCourseName': subCourseName,
      'instructorName': instructorName,
      'rating': rating,
      'topicName': topicName,
      'studentTimeDocId': studentTimeDocId,
      'certificationId': certificationId,
      'certificationName': certificationName,
      'status': status,
      'startedDate': startedDate,
      'startedTime': startedTime,
      'completedDate': completedDate,
      'completedTime': completedTime,
      'feedback': feedback,
      'description': description,
      'index': index,
      'prefSlotId': prefSlotId,
      'timestamp': timestamp,
      'lastUpdated': lastUpdated,
    };
  }

  factory CompletedTopicModel.fromMap(Map<String, dynamic> map) {
    return CompletedTopicModel(
      enrollId: map['enrollId'] ?? "",
      topicId: map['topicId'] ?? "",
      studentId: map['studentId'] ?? "",
      userId: map['userId'] ?? "",
      instructorId: map['instructorId'] ?? "",
      courseId: map['courseId'] ?? "",
      subCourseId: map['subCourseId'] ?? "",
      courseName: map['courseName'] ?? "",
      subCourseName: map['subCourseName'] ?? "",
      instructorName: map['instructorName'] ?? "",
      rating: map['rating'] ?? "",
      topicName: map['topicName'] ?? "",
      studentTimeDocId: map['studentTimeDocId'] ?? "",
      certificationId: map['certificationId'] ?? "",
      certificationName: map['certificationName'] ?? "",
      status: map['status'] as bool,
      startedDate: map['startedDate'] ?? "",
      startedTime: map['startedTime'] ?? "",
      completedDate: map['completedDate'] ?? "",
      completedTime: map['completedTime'] ?? "",
      feedback: map['feedback'] ?? "",
      description: map['description'] ?? "",
      index: map['index'] as int,
      prefSlotId: map['prefSlotId'] ?? "",
      timestamp: map['timestamp'] as Timestamp,
      lastUpdated: map['lastUpdated'] as Timestamp,
    );
  }
}

import 'package:cloud_firestore/cloud_firestore.dart';

import '../../../domain/entities/student/student_attendance.dart';

class StudentAttendanceModel extends StudentAttendance {
  StudentAttendanceModel(
      {required super.attendanceId,
      required super.studentName,
      required super.studentId,
      required super.parentName,
      required super.userId,
      required super.instructorId,
      required super.instructorName,
      required super.time,
      required super.date,
      required super.note,
      required super.courseName,
      required super.courseId,
      required super.subCourseName,
      required super.subCourseId,
      required super.studentTimeDocId,
      required super.parentTimeId,
      required super.timeId,
      required super.instructorEmail,
      required super.dayName,
      required super.index,
      required super.prefSlotId,
      required super.enrollId,
      required super.timestamp,
      required super.lastUpdated});

  StudentAttendanceModel copyWith({
    String? attendanceId,
    String? studentName,
    String? studentId,
    String? parentName,
    String? userId,
    String? instructorId,
    String? instructorName,
    String? time,
    String? date,
    String? note,
    String? courseName,
    String? courseId,
    String? subCourseName,
    String? subCourseId,
    String? studentTimeDocId,
    String? parentTimeId,
    String? timeId,
    String? instructorEmail,
    String? dayName,
    int? index,
    String? prefSlotId,
    String? enrollId,
    Timestamp? timestamp,
    Timestamp? lastUpdated,
  }) {
    return StudentAttendanceModel(
      attendanceId: attendanceId ?? this.attendanceId,
      studentName: studentName ?? this.studentName,
      studentId: studentId ?? this.studentId,
      parentName: parentName ?? this.parentName,
      userId: userId ?? this.userId,
      instructorId: instructorId ?? this.instructorId,
      instructorName: instructorName ?? this.instructorName,
      time: time ?? this.time,
      date: date ?? this.date,
      note: note ?? this.note,
      courseName: courseName ?? this.courseName,
      courseId: courseId ?? this.courseId,
      subCourseName: subCourseName ?? this.subCourseName,
      subCourseId: subCourseId ?? this.subCourseId,
      studentTimeDocId: studentTimeDocId ?? this.studentTimeDocId,
      parentTimeId: parentTimeId ?? this.parentTimeId,
      timeId: timeId ?? this.timeId,
      instructorEmail: instructorEmail ?? this.instructorEmail,
      dayName: dayName ?? this.dayName,
      index: index ?? this.index,
      prefSlotId: prefSlotId ?? this.prefSlotId,
      enrollId: enrollId ?? this.enrollId,
      timestamp: timestamp ?? this.timestamp,
      lastUpdated: lastUpdated ?? this.lastUpdated,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'attendanceId': attendanceId,
      'studentName': studentName,
      'studentId': studentId,
      'parentName': parentName,
      'userId': userId,
      'instructorId': instructorId,
      'instructorName': instructorName,
      'time': time,
      'date': date,
      'note': note,
      'courseName': courseName,
      'courseId': courseId,
      'subCourseName': subCourseName,
      'subCourseId': subCourseId,
      'studentTimeDocId': studentTimeDocId,
      'parentTimeId': parentTimeId,
      'timeId': timeId,
      'instructorEmail': instructorEmail,
      'dayName': dayName,
      'index': index,
      'prefSlotId': prefSlotId,
      'enrollId': enrollId,
      'timestamp': timestamp,
      'lastUpdated': lastUpdated,
    };
  }

  factory StudentAttendanceModel.fromMap(Map<String, dynamic> map) {
    return StudentAttendanceModel(
      attendanceId: map['attendanceId'] as String,
      studentName: map['studentName'] as String,
      studentId: map['studentId'] as String,
      parentName: map['parentName'] as String,
      userId: map['userId'] as String,
      instructorId: map['instructorId'] as String,
      instructorName: map['instructorName'] as String,
      time: map['time'] as String,
      date: map['date'] as String,
      note: map['note'] as String,
      courseName: map['courseName'] as String,
      courseId: map['courseId'] as String,
      subCourseName: map['subCourseName'] as String,
      subCourseId: map['subCourseId'] as String,
      studentTimeDocId: map['studentTimeDocId'] as String,
      parentTimeId: map['parentTimeId'] as String,
      timeId: map['timeId'] as String,
      instructorEmail: map['instructorEmail'] as String,
      dayName: map['dayName'] as String,
      index: map['index'] as int,
      prefSlotId: map['prefSlotId'] as String,
      enrollId: map['enrollId'] as String,
      timestamp: map['timestamp'] as Timestamp,
      lastUpdated: map['lastUpdated'] as Timestamp,
    );
  }
}

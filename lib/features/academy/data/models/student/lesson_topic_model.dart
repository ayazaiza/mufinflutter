import 'package:cloud_firestore/cloud_firestore.dart';

import '../../../domain/entities/student/lesson_topic.dart';

class LessonTopicModel extends LessonTopic {
  LessonTopicModel(
      {required super.gradeId,
      required super.gradeName,
      required super.lessonId,
      required super.lessonName,
      required super.lessonTopicId,
      required super.gradeTopicId,
      required super.topicId,
      required super.studentId,
      required super.userId,
      required super.instructorId,
      required super.courseId,
      required super.subCourseId,
      required super.courseName,
      required super.subCourseName,
      required super.instructorName,
      required super.rating,
      required super.title,
      required super.studentTimeDocId,
      required super.certificationId,
      required super.certificationName,
      required super.status,
      required super.startedDate,
      required super.completedDate,
      required super.completedTime,
      required super.feedback,
      required super.description,
      required super.index,
      required super.enrollId,
      required super.prefSlotId,
      required super.timestamp,
      required super.lastUpdated});

  LessonTopicModel copyWith({
    String? gradeId,
    String? gradeName,
    String? lessonId,
    String? lessonName,
    String? lessonTopicId,
    String? gradeTopicId,
    String? topicId,
    String? studentId,
    String? userId,
    String? instructorId,
    String? courseId,
    String? subCourseId,
    String? courseName,
    String? subCourseName,
    String? instructorName,
    String? rating,
    String? title,
    String? studentTimeDocId,
    String? certificationId,
    String? certificationName,
    bool? status,
    String? startedDate,
    String? completedDate,
    String? completedTime,
    String? feedback,
    String? description,
    int? index,
    String? enrollId,
    String? prefSlotId,
    Timestamp? timestamp,
    Timestamp? lastUpdated,
  }) {
    return LessonTopicModel(
      gradeId: gradeId ?? this.gradeId,
      gradeName: gradeName ?? this.gradeName,
      lessonId: lessonId ?? this.lessonId,
      lessonName: lessonName ?? this.lessonName,
      lessonTopicId: lessonTopicId ?? this.lessonTopicId,
      gradeTopicId: gradeTopicId ?? this.gradeTopicId,
      topicId: topicId ?? this.topicId,
      studentId: studentId ?? this.studentId,
      userId: userId ?? this.userId,
      instructorId: instructorId ?? this.instructorId,
      courseId: courseId ?? this.courseId,
      subCourseId: subCourseId ?? this.subCourseId,
      courseName: courseName ?? this.courseName,
      subCourseName: subCourseName ?? this.subCourseName,
      instructorName: instructorName ?? this.instructorName,
      rating: rating ?? this.rating,
      title: title ?? this.title,
      studentTimeDocId: studentTimeDocId ?? this.studentTimeDocId,
      certificationId: certificationId ?? this.certificationId,
      certificationName: certificationName ?? this.certificationName,
      status: status ?? this.status,
      startedDate: startedDate ?? this.startedDate,
      completedDate: completedDate ?? this.completedDate,
      completedTime: completedTime ?? this.completedTime,
      feedback: feedback ?? this.feedback,
      description: description ?? this.description,
      index: index ?? this.index,
      enrollId: enrollId ?? this.enrollId,
      prefSlotId: prefSlotId ?? this.prefSlotId,
      timestamp: timestamp ?? this.timestamp,
      lastUpdated: lastUpdated ?? this.lastUpdated,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'gradeId': gradeId,
      'gradeName': gradeName,
      'lessonId': lessonId,
      'lessonName': lessonName,
      'lessonTopicId': lessonTopicId,
      'gradeTopicId': gradeTopicId,
      'topicId': topicId,
      'studentId': studentId,
      'userId': userId,
      'instructorId': instructorId,
      'courseId': courseId,
      'subCourseId': subCourseId,
      'courseName': courseName,
      'subCourseName': subCourseName,
      'instructorName': instructorName,
      'rating': rating,
      'title': title,
      'studentTimeDocId': studentTimeDocId,
      'certificationId': certificationId,
      'certificationName': certificationName,
      'status': status,
      'startedDate': startedDate,
      'completedDate': completedDate,
      'completedTime': completedTime,
      'feedback': feedback,
      'description': description,
      'index': index,
      'enrollId': enrollId,
      'prefSlotId': prefSlotId,
      'timestamp': timestamp,
      'lastUpdated': lastUpdated,
    };
  }

  factory LessonTopicModel.fromMap(Map<String, dynamic> map) {
    return LessonTopicModel(
      gradeId: map['gradeId'] as String,
      gradeName: map['gradeName'] as String,
      lessonId: map['lessonId'] as String,
      lessonName: map['lessonName'] as String,
      lessonTopicId: map['lessonTopicId'] as String,
      gradeTopicId: map['gradeTopicId'] as String,
      topicId: map['topicId'] as String,
      studentId: map['studentId'] as String,
      userId: map['userId'] as String,
      instructorId: map['instructorId'] as String,
      courseId: map['courseId'] as String,
      subCourseId: map['subCourseId'] as String,
      courseName: map['courseName'] as String,
      subCourseName: map['subCourseName'] as String,
      instructorName: map['instructorName'] as String,
      rating: map['rating'] as String,
      title: map['title'] as String,
      studentTimeDocId: map['studentTimeDocId'] as String,
      certificationId: map['certificationId'] as String,
      certificationName: map['certificationName'] as String,
      status: map['status'] as bool,
      startedDate: map['startedDate'] as String,
      completedDate: map['completedDate'] as String,
      completedTime: map['completedTime'] as String,
      feedback: map['feedback'] as String,
      description: map['description'] as String,
      index: map['index'] as int,
      enrollId: map['enrollId'] as String,
      prefSlotId: map['prefSlotId'] as String,
      timestamp: map['timestamp'] as Timestamp,
      lastUpdated: map['lastUpdated'] as Timestamp,
    );
  }
}
